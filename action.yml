name: 'Build and publish Docker Images to GitHub Container registry'
description: 'Supports custom Dockerfile name, tags, build context, etc. Could generate Docker tags based on git branches.'
inputs:
  github-token:
    description: 'GitHub token to push Docker image to GitHub Packages'
    required: true
  image-tag:
    description: 'Docker Image tag'
    default: 'latest'
    required: false
  extract-commit-sha:
    description: 'Extract shorted sha from commit'
    default: 'false'
    required: false
  extract-git-tag:
    description: 'Extract git-tag from repository'
    default: 'false'
    required: false
  dockerfile:
    description: 'Dockerfile name'
    default: 'Dockerfile'
    required: false
  build-context:
    description: 'Path to build context'
    default: '.'
    required: false
  custom-args:
    description: 'Any additional docker build arguments as a string'
    default: ''
    required: false
runs:
  using: 'composite'
  steps:
    - env:
        DOCKER_TOKEN: ${{ inputs.github-token }}
        DOCKER_IMAGE_TAG: ${{ inputs.image-tag }}
        EXTRACT_TAG_FROM_COMMIT_SHA: ${{ inputs.extract-commit-sha }}
        EXTRACT_TAG_FROM_GIT_REF: ${{ inputs.extract-git-tag }}
        DOCKERFILE: ${{ inputs.dockerfile }}
        BUILD_CONTEXT: ${{ inputs.build-context }}
        CUSTOM_DOCKER_BUILD_ARGS: ${{ inputs.custom-args }}
      shell: bash
      run: |
        echo "Working directory: $(pwd)"

        TAGS=()
        if [ -n "$DOCKER_IMAGE_TAG" ]; then
          echo "Fixed tag: $DOCKER_IMAGE_TAG"
          TAGS+=("$DOCKER_IMAGE_TAG")
        fi

        if [ "$EXTRACT_TAG_FROM_COMMIT_SHA" == "true" ]; then
          EXTRACTED_TAG=$(git rev-parse --short HEAD)
          echo "Extracted tag from commit sha: $EXTRACTED_TAG"
          TAGS+=("$EXTRACTED_TAG")
        fi

        if [ "$EXTRACT_TAG_FROM_GIT_REF" == "true" ]; then
          EXTRACTED_TAG=$(git describe --abbrev=0 --tags)
          echo "Extracted tag from git ref: $EXTRACTED_TAG"
          TAGS+=("$EXTRACTED_TAG")
        fi

        TAG_FLAGS=()
        DOCKER_IMAGE_NAME="ghcr.io/${GITHUB_REPOSITORY}"
        for TAG in "${TAGS[@]}"; do TAG_FLAGS+=(-t "$DOCKER_IMAGE_NAME:$TAG"); done

        docker login -u publisher -p "${DOCKER_TOKEN}" ghcr.io
        docker build "${TAG_FLAGS[@]}" -f "$DOCKERFILE" $CUSTOM_DOCKER_BUILD_ARGS "$BUILD_CONTEXT"

        if [[ "$CUSTOM_DOCKER_BUILD_ARGS" != *"--push"* ]]; then
          docker push "$DOCKER_IMAGE_NAME" --all-tags
        fi
branding:
  icon: 'box'
  color: 'blue'
